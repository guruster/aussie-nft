{"version":3,"sources":["layouts/LogoOnlyLayout.js","components/authentication/reset-password/ResetPasswordForm.js","pages/authentication/ResetPassword.js"],"names":["HeaderStyle","styled","theme","top","left","lineHeight","width","position","padding","spacing","breakpoints","up","LogoOnlyLayout","to","ResetPasswordForm","onSent","onGetEmail","resetPassword","useAuth","isMountedRef","useIsMountedRef","ResetPasswordSchema","Yup","shape","email","required","formik","useFormik","initialValues","validationSchema","onSubmit","values","a","setErrors","setSubmitting","current","console","error","afterSubmit","message","errors","touched","isSubmitting","handleSubmit","getFieldProps","value","autoComplete","noValidate","Stack","Alert","severity","TextField","fullWidth","type","label","Boolean","helperText","LoadingButton","size","variant","loading","RootStyle","Page","display","minHeight","alignItems","justifyContent","ResetPassword","useState","setEmail","sent","setSent","title","Container","Box","sx","maxWidth","mx","textAlign","mb","height","Typography","gutterBottom","Button","component","RouterLink","PATH_AUTH","login","mt","paragraph","color"],"mappings":"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","file":"static/js/14.e45c40a6.chunk.js","sourcesContent":["import { Link as RouterLink, Outlet } from 'react-router-dom';\r\n// material\r\nimport { styled } from '@material-ui/core/styles';\r\n// components\r\nimport Logo from '../components/Logo';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst HeaderStyle = styled('header')(({ theme }) => ({\r\n  top: 0,\r\n  left: 0,\r\n  lineHeight: 0,\r\n  width: '100%',\r\n  position: 'absolute',\r\n  padding: theme.spacing(3, 3, 0),\r\n  [theme.breakpoints.up('sm')]: {\r\n    padding: theme.spacing(5, 5, 0)\r\n  }\r\n}));\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function LogoOnlyLayout() {\r\n  return (\r\n    <>\r\n      <HeaderStyle>\r\n        <RouterLink to=\"/\">\r\n          <Logo />\r\n        </RouterLink>\r\n      </HeaderStyle>\r\n      <Outlet />\r\n    </>\r\n  );\r\n}\r\n","import * as Yup from 'yup';\nimport PropTypes from 'prop-types';\nimport { Form, FormikProvider, useFormik } from 'formik';\n// material\nimport { TextField, Alert, Stack } from '@material-ui/core';\nimport { LoadingButton } from '@material-ui/lab';\n// hooks\nimport useAuth from '../../../hooks/useAuth';\nimport useIsMountedRef from '../../../hooks/useIsMountedRef';\n\n// ----------------------------------------------------------------------\n\nResetPasswordForm.propTypes = {\n  onSent: PropTypes.func,\n  onGetEmail: PropTypes.func\n};\n\nexport default function ResetPasswordForm({ onSent, onGetEmail }) {\n  const { resetPassword } = useAuth();\n  const isMountedRef = useIsMountedRef();\n\n  const ResetPasswordSchema = Yup.object().shape({\n    email: Yup.string().email('Email must be a valid email address').required('Email is required')\n  });\n\n  const formik = useFormik({\n    initialValues: {\n      email: 'demo@minimals.cc'\n    },\n    validationSchema: ResetPasswordSchema,\n    onSubmit: async (values, { setErrors, setSubmitting }) => {\n      try {\n        await resetPassword(values.email);\n        if (isMountedRef.current) {\n          onSent();\n          onGetEmail(formik.values.email);\n          setSubmitting(false);\n        }\n      } catch (error) {\n        console.error(error);\n        if (isMountedRef.current) {\n          setErrors({ afterSubmit: error.message });\n          setSubmitting(false);\n        }\n      }\n    }\n  });\n\n  const { errors, touched, isSubmitting, handleSubmit, getFieldProps } = formik;\n\n  return (\n    <FormikProvider value={formik}>\n      <Form autoComplete=\"off\" noValidate onSubmit={handleSubmit}>\n        <Stack spacing={3}>\n          {errors.afterSubmit && <Alert severity=\"error\">{errors.afterSubmit}</Alert>}\n\n          <TextField\n            fullWidth\n            {...getFieldProps('email')}\n            type=\"email\"\n            label=\"Email address\"\n            error={Boolean(touched.email && errors.email)}\n            helperText={touched.email && errors.email}\n          />\n\n          <LoadingButton fullWidth size=\"large\" type=\"submit\" variant=\"contained\" loading={isSubmitting}>\n            Reset Password\n          </LoadingButton>\n        </Stack>\n      </Form>\n    </FormikProvider>\n  );\n}\n","import { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\n// material\nimport { styled } from '@material-ui/core/styles';\nimport { Box, Button, Container, Typography } from '@material-ui/core';\n// layouts\nimport LogoOnlyLayout from '../../layouts/LogoOnlyLayout';\n// routes\nimport { PATH_AUTH } from '../../routes/paths';\n// components\nimport Page from '../../components/Page';\nimport { ResetPasswordForm } from '../../components/authentication/reset-password';\n//\nimport { SentIcon } from '../../assets';\n\n// ----------------------------------------------------------------------\n\nconst RootStyle = styled(Page)(({ theme }) => ({\n  display: 'flex',\n  minHeight: '100%',\n  alignItems: 'center',\n  justifyContent: 'center',\n  padding: theme.spacing(12, 0)\n}));\n\n// ----------------------------------------------------------------------\n\nexport default function ResetPassword() {\n  const [email, setEmail] = useState('');\n  const [sent, setSent] = useState(false);\n\n  return (\n    <RootStyle title=\"Reset Password | Minimal UI\">\n      <LogoOnlyLayout />\n\n      <Container>\n        <Box sx={{ maxWidth: 480, mx: 'auto' }}>\n          {!sent ? (  \n            <>\n              <Typography variant=\"h3\" paragraph>\n                Forgot your password?\n              </Typography>\n              <Typography sx={{ color: 'text.secondary', mb: 5 }}>\n                Please enter the email address associated with your account and We will email you a link to reset your\n                password.\n              </Typography>\n\n              <ResetPasswordForm onSent={() => setSent(true)} onGetEmail={(value) => setEmail(value)} />\n\n              <Button fullWidth size=\"large\" component={RouterLink} to={PATH_AUTH.login} sx={{ mt: 1 }}>\n                Back\n              </Button>\n            </>\n          ) : (\n            <Box sx={{ textAlign: 'center' }}>\n              <SentIcon sx={{ mb: 5, mx: 'auto', height: 160 }} />\n\n              <Typography variant=\"h3\" gutterBottom>\n                Request sent successfully\n              </Typography>\n              <Typography>\n                We have sent a confirmation email to &nbsp;\n                <strong>{email}</strong>\n                <br />\n                Please check your email.\n              </Typography>\n\n              <Button size=\"large\" variant=\"contained\" component={RouterLink} to={PATH_AUTH.login} sx={{ mt: 5 }}>\n                Back\n              </Button>\n            </Box>\n          )}\n        </Box>\n      </Container>\n    </RootStyle>\n  );\n}\n"],"sourceRoot":""}