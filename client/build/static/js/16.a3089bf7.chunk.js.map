{"version":3,"sources":["pages/styled/StyledInput.js","utils/formatNumber.js","components/upload/UploadMultiFile.js","components/upload/UploadSingleFile.js","components/upload/UploadAvatar.js","pages/user/AccountGeneral.js","pages/user/AccountChangePassword.js","pages/user/UserAccount.js"],"names":["RootStyle","styled","Container","theme","paddingTop","spacing","paddingBottom","breakpoints","up","StyledCard","Button","color","fontFamily","fontWeight","fontSize","lineHeight","letterSpacing","textTransform","Card","backgroundColor","width","borderRadius","boxShadow","StyledCircleProgress","CircularProgress","fData","number","numeral","format","outline","display","textAlign","alignItems","flexDirection","justifyContent","padding","shape","palette","background","neutral","border","grey","opacity","cursor","overflow","position","transition","transitions","create","height","margin","DropZoneStyle","zIndex","PlaceholderStyle","text","secondary","easing","easeInOut","duration","shorter","UploadAvatar","error","file","caption","sx","other","useDropzone","multiple","getRootProps","getInputProps","isDragActive","isDragReject","fileRejections","ShowRejectionItems","Paper","variant","py","px","my","borderColor","bgcolor","alpha","main","map","errors","path","size","Box","Typography","noWrap","e","component","message","code","alt","src","isString","preview","objectFit","className","Icon","icon","roundAddAPhoto","mb","length","AccountGeneral","dispatch","useDispatch","isMountedRef","useIsMountedRef","enqueueSnackbar","useSnackbar","user","useSelector","state","auth","UpdateUserSchema","Yup","name","min","max","required","email","formik","useFormik","enableReinitialize","initialValues","phone","avatar","validationSchema","onSubmit","values","a","setErrors","setSubmitting","saveDetail","current","afterSubmit","touched","isSubmitting","handleSubmit","getFieldProps","setFieldValue","handleDrop","useCallback","acceptedFiles","URL","createObjectURL","value","autoComplete","noValidate","Grid","container","item","xs","md","accept","maxSize","onDrop","Boolean","mt","mx","FormHelperText","p","Stack","direction","TextField","fullWidth","label","LoadingButton","type","loading","AccountChangePassword","ChangePassWordSchema","curPassword","password","password2","oneOf","resetPassword","helperText","UserAccount","themeStretch","useSettings","useState","currentTab","setCurrentTab","useEffect","ACCOUNT_TABS","roundAccountBox","roundVpnKey","Page","title","maxWidth","Tabs","scrollButtons","allowScrollButtonsMobile","onChange","event","newValue","tab","Tab","disableRipple","capitalCase"],"mappings":"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","file":"static/js/16.a3089bf7.chunk.js","sourcesContent":["import { Button, Divider, Container, Card, CircularProgress} from '@material-ui/core';\r\nimport { styled} from '@material-ui/core/styles';\r\n\r\nexport const RootStyle = styled(Container)(({ theme }) => ({\r\n    paddingTop: theme.spacing(8),\r\n    paddingBottom: theme.spacing(15),\r\n    [theme.breakpoints.up('md')]: {\r\n        paddingTop: theme.spacing(11)\r\n    }\r\n}));\r\n\r\nexport const NavMenuItem = styled(Button)(({ theme }) => ({\r\n    color: \"white\",\r\n    fontFamily: \"Poppins, sans-serif\",\r\n    fontWeight: \"400\",\r\n    fontSize: \"1.2rem\",\r\n    lineHeight: \"1.334\",\r\n    letterSpacing: \"0em\",\r\n    // maxWidth: \"100px\",\r\n    // textShadow:\"7px 6px 10px #17a2b8\",\r\n    '&:hover': {\r\n        color: \"white\",\r\n    },\r\n    textTransform: \"inherit\"\r\n}));\r\n\r\nexport const StyledCard = styled(Card)({\r\n    backgroundColor: \"rgb(62, 62, 62)\",\r\n    // p: \"6px\",\r\n    // maxWidth: {xs:\"260px\"},\r\n    width: '100%',\r\n    borderRadius: \"18px\",\r\n    boxShadow: \"11px 11px 6px -1px rgb(160 160 160 / 20%)\",\r\n\r\n});\r\n\r\nexport const StyledCircleProgress = styled(CircularProgress)({\r\n    color: 'white'\r\n});","import { replace } from 'lodash';\nimport numeral from 'numeral';\n\n// ----------------------------------------------------------------------\n\nexport function fCurrency(number) {\n  return numeral(number).format(Number.isInteger(number) ? '$0,0' : '$0,0.00');\n}\n\nexport function fPercent(number) {\n  return numeral(number / 100).format('0.0%');\n}\n\nexport function fNumber(number) {\n  return numeral(number).format();\n}\n\nexport function fShortenNumber(number) {\n  return replace(numeral(number).format('0.00a'), '.00', '');\n}\n\nexport function fData(number) {\n  return numeral(number).format('0.0 b');\n}\n","import { isString } from 'lodash';\nimport PropTypes from 'prop-types';\nimport { Icon } from '@iconify/react';\nimport { useDropzone } from 'react-dropzone';\nimport fileFill from '@iconify/icons-eva/file-fill';\nimport closeFill from '@iconify/icons-eva/close-fill';\nimport { motion, AnimatePresence } from 'framer-motion';\n// material\nimport { alpha, styled } from '@material-ui/core/styles';\nimport {\n  Box,\n  List,\n  Stack,\n  Paper,\n  Button,\n  ListItem,\n  Typography,\n  ListItemIcon,\n  ListItemText,\n  ListItemSecondaryAction\n} from '@material-ui/core';\n// utils\nimport { fData } from '../../utils/formatNumber';\n//\nimport { MIconButton } from '../@material-extend';\nimport { varFadeInRight } from '../animate';\nimport { UploadIllustration } from '../../assets';\n\n// ----------------------------------------------------------------------\n\nconst DropZoneStyle = styled('div')(({ theme }) => ({\n  outline: 'none',\n  display: 'flex',\n  textAlign: 'center',\n  alignItems: 'center',\n  flexDirection: 'column',\n  justifyContent: 'center',\n  padding: theme.spacing(5, 1),\n  borderRadius: theme.shape.borderRadius,\n  backgroundColor: theme.palette.background.neutral,\n  border: `1px dashed ${theme.palette.grey[500_32]}`,\n  '&:hover': { opacity: 0.72, cursor: 'pointer' },\n  [theme.breakpoints.up('md')]: { textAlign: 'left', flexDirection: 'row' }\n}));\n\n// ----------------------------------------------------------------------\n\nUploadMultiFile.propTypes = {\n  error: PropTypes.bool,\n  showPreview: PropTypes.bool,\n  files: PropTypes.array,\n  onRemove: PropTypes.func,\n  onRemoveAll: PropTypes.func,\n  sx: PropTypes.object\n};\n\nexport default function UploadMultiFile({ error, showPreview = false, files, onRemove, onRemoveAll, sx, ...other }) {\n  const hasFile = files.length > 0;\n\n  const { getRootProps, getInputProps, isDragActive, isDragReject, fileRejections } = useDropzone({\n    ...other\n  });\n\n  const ShowRejectionItems = () => (\n    <Paper\n      variant=\"outlined\"\n      sx={{\n        py: 1,\n        px: 2,\n        mt: 3,\n        borderColor: 'error.light',\n        bgcolor: (theme) => alpha(theme.palette.error.main, 0.08)\n      }}\n    >\n      {fileRejections.map(({ file, errors }) => {\n        const { path, size } = file;\n        return (\n          <Box key={path} sx={{ my: 1 }}>\n            <Typography variant=\"subtitle2\" noWrap>\n              {path} - {fData(size)}\n            </Typography>\n            {errors.map((e) => (\n              <Typography key={e.code} variant=\"caption\" component=\"p\">\n                - {e.message}\n              </Typography>\n            ))}\n          </Box>\n        );\n      })}\n    </Paper>\n  );\n\n  return (\n    <Box sx={{ width: '100%', ...sx }}>\n      <DropZoneStyle\n        {...getRootProps()}\n        sx={{\n          ...(isDragActive && { opacity: 0.72 }),\n          ...((isDragReject || error) && {\n            color: 'error.main',\n            borderColor: 'error.light',\n            bgcolor: 'error.lighter'\n          })\n        }}\n      >\n        <input {...getInputProps()} />\n\n        <UploadIllustration sx={{ width: 220 }} />\n\n        <Box sx={{ p: 3, ml: { md: 2 } }}>\n          <Typography gutterBottom variant=\"h5\">\n            Drop or Select file\n          </Typography>\n\n          <Typography variant=\"body2\" sx={{ color: 'text.secondary' }}>\n            Drop files here or click&nbsp;\n            <Typography variant=\"body2\" component=\"span\" sx={{ color: 'primary.main', textDecoration: 'underline' }}>\n              browse\n            </Typography>\n            &nbsp;thorough your machine\n          </Typography>\n        </Box>\n      </DropZoneStyle>\n\n      {fileRejections.length > 0 && <ShowRejectionItems />}\n\n      <List disablePadding sx={{ ...(hasFile && { my: 3 }) }}>\n        <AnimatePresence>\n          {files.map((file) => {\n            const { name, size, preview } = file;\n            const key = isString(file) ? file : name;\n\n            if (showPreview) {\n              return (\n                <ListItem\n                  key={key}\n                  component={motion.div}\n                  {...varFadeInRight}\n                  sx={{\n                    p: 0,\n                    m: 0.5,\n                    width: 80,\n                    height: 80,\n                    borderRadius: 1.5,\n                    overflow: 'hidden',\n                    position: 'relative',\n                    display: 'inline-flex'\n                  }}\n                >\n                  <Paper\n                    variant=\"outlined\"\n                    component=\"img\"\n                    src={isString(file) ? file : preview}\n                    sx={{ width: '100%', height: '100%', objectFit: 'cover', position: 'absolute' }}\n                  />\n                  <Box sx={{ top: 6, right: 6, position: 'absolute' }}>\n                    <MIconButton\n                      size=\"small\"\n                      onClick={() => onRemove(file)}\n                      sx={{\n                        p: '2px',\n                        color: 'common.white',\n                        bgcolor: (theme) => alpha(theme.palette.grey[900], 0.72),\n                        '&:hover': {\n                          bgcolor: (theme) => alpha(theme.palette.grey[900], 0.48)\n                        }\n                      }}\n                    >\n                      <Icon icon={closeFill} />\n                    </MIconButton>\n                  </Box>\n                </ListItem>\n              );\n            }\n\n            return (\n              <ListItem\n                key={key}\n                component={motion.div}\n                {...varFadeInRight}\n                sx={{\n                  my: 1,\n                  py: 0.75,\n                  px: 2,\n                  borderRadius: 1,\n                  border: (theme) => `solid 1px ${theme.palette.divider}`,\n                  bgcolor: 'background.paper'\n                }}\n              >\n                <ListItemIcon>\n                  <Icon icon={fileFill} width={28} height={28} />\n                </ListItemIcon>\n                <ListItemText\n                  primary={isString(file) ? file : name}\n                  secondary={isString(file) ? '' : fData(size)}\n                  primaryTypographyProps={{ variant: 'subtitle2' }}\n                  secondaryTypographyProps={{ variant: 'caption' }}\n                />\n                <ListItemSecondaryAction>\n                  <MIconButton edge=\"end\" size=\"small\" onClick={() => onRemove(file)}>\n                    <Icon icon={closeFill} />\n                  </MIconButton>\n                </ListItemSecondaryAction>\n              </ListItem>\n            );\n          })}\n        </AnimatePresence>\n      </List>\n\n      {hasFile && (\n        <Stack direction=\"row\" justifyContent=\"flex-end\">\n          <Button onClick={onRemoveAll} sx={{ mr: 1.5 }}>\n            Remove all\n          </Button>\n          <Button variant=\"contained\">Upload files</Button>\n        </Stack>\n      )}\n    </Box>\n  );\n}\n","import { isString } from 'lodash';\nimport PropTypes from 'prop-types';\nimport { useDropzone } from 'react-dropzone';\n// material\nimport { alpha, styled } from '@material-ui/core/styles';\nimport { Paper, Box, Typography } from '@material-ui/core';\n// utils\nimport { fData } from '../../utils/formatNumber';\n//\nimport { UploadIllustration } from '../../assets';\n\n// ----------------------------------------------------------------------\n\nconst DropZoneStyle = styled('div')(({ theme }) => ({\n  outline: 'none',\n  display: 'flex',\n  overflow: 'hidden',\n  textAlign: 'center',\n  position: 'relative',\n  alignItems: 'center',\n  flexDirection: 'column',\n  justifyContent: 'center',\n  padding: theme.spacing(5, 0),\n  borderRadius: theme.shape.borderRadius,\n  transition: theme.transitions.create('padding'),\n  backgroundColor: theme.palette.background.neutral,\n  border: `1px dashed ${theme.palette.grey[500_32]}`,\n  '&:hover': {\n    opacity: 0.72,\n    cursor: 'pointer'\n  },\n  [theme.breakpoints.up('md')]: { textAlign: 'left', flexDirection: 'row' }\n}));\n\n// ----------------------------------------------------------------------\n\nUploadSingleFile.propTypes = {\n  error: PropTypes.bool,\n  file: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n  sx: PropTypes.object\n};\n\nexport default function UploadSingleFile({ error, file, sx, ...other }) {\n  const { getRootProps, getInputProps, isDragActive, isDragReject, fileRejections } = useDropzone({\n    multiple: false,\n    ...other\n  });\n\n  const ShowRejectionItems = () => (\n    <Paper\n      variant=\"outlined\"\n      sx={{\n        py: 1,\n        px: 2,\n        mt: 3,\n        borderColor: 'error.light',\n        bgcolor: (theme) => alpha(theme.palette.error.main, 0.08)\n      }}\n    >\n      {fileRejections.map(({ file, errors }) => {\n        const { path, size } = file;\n        return (\n          <Box key={path} sx={{ my: 1 }}>\n            <Typography variant=\"subtitle2\" noWrap>\n              {path} - {fData(size)}\n            </Typography>\n            {errors.map((e) => (\n              <Typography key={e.code} variant=\"caption\" component=\"p\">\n                - {e.message}\n              </Typography>\n            ))}\n          </Box>\n        );\n      })}\n    </Paper>\n  );\n\n  return (\n    <Box sx={{ width: '100%', ...sx }}>\n      <DropZoneStyle\n        {...getRootProps()}\n        sx={{\n          ...(isDragActive && { opacity: 0.72 }),\n          ...((isDragReject || error) && {\n            color: 'error.main',\n            borderColor: 'error.light',\n            bgcolor: 'error.lighter'\n          }),\n          ...(file && { padding: '12% 0' })\n        }}\n      >\n        <input {...getInputProps()} />\n\n        <UploadIllustration sx={{ width: 220 }} />\n\n        <Box sx={{ p: 3, ml: { md: 2 } }}>\n          <Typography gutterBottom variant=\"h5\">\n            Drop or Select file\n          </Typography>\n\n          <Typography variant=\"body2\" sx={{ color: 'text.secondary' }}>\n            Drop files here or click&nbsp;\n            <Typography variant=\"body2\" component=\"span\" sx={{ color: 'primary.main', textDecoration: 'underline' }}>\n              browse\n            </Typography>\n            &nbsp;thorough your machine\n          </Typography>\n        </Box>\n\n        {file && (\n          <Box\n            component=\"img\"\n            alt=\"file preview\"\n            src={isString(file) ? file : file.preview}\n            sx={{\n              top: 8,\n              borderRadius: 1,\n              objectFit: 'cover',\n              position: 'absolute',\n              width: 'calc(100% - 16px)',\n              height: 'calc(100% - 16px)'\n            }}\n          />\n        )}\n      </DropZoneStyle>\n\n      {fileRejections.length > 0 && <ShowRejectionItems />}\n    </Box>\n  );\n}\n","import { isString } from 'lodash';\nimport PropTypes from 'prop-types';\nimport { Icon } from '@iconify/react';\nimport { useDropzone } from 'react-dropzone';\nimport roundAddAPhoto from '@iconify/icons-ic/round-add-a-photo';\n// material\nimport { alpha, styled } from '@material-ui/core/styles';\nimport { Box, Typography, Paper } from '@material-ui/core';\n// utils\nimport { fData } from '../../utils/formatNumber';\n\n// ----------------------------------------------------------------------\n\nconst RootStyle = styled('div')(({ theme }) => ({\n  width: 144,\n  height: 144,\n  margin: 'auto',\n  borderRadius: '50%',\n  padding: theme.spacing(1),\n  border: `1px dashed ${theme.palette.grey[500_32]}`\n}));\n\nconst DropZoneStyle = styled('div')({\n  zIndex: 0,\n  width: '100%',\n  height: '100%',\n  outline: 'none',\n  display: 'flex',\n  overflow: 'hidden',\n  borderRadius: '50%',\n  position: 'relative',\n  alignItems: 'center',\n  justifyContent: 'center',\n  '& > *': { width: '100%', height: '100%' },\n  '&:hover': {\n    cursor: 'pointer',\n    '& .placeholder': {\n      zIndex: 9\n    }\n  }\n});\n\nconst PlaceholderStyle = styled('div')(({ theme }) => ({\n  display: 'flex',\n  position: 'absolute',\n  alignItems: 'center',\n  flexDirection: 'column',\n  justifyContent: 'center',\n  color: theme.palette.text.secondary,\n  backgroundColor: theme.palette.background.neutral,\n  transition: theme.transitions.create('opacity', {\n    easing: theme.transitions.easing.easeInOut,\n    duration: theme.transitions.duration.shorter\n  }),\n  '&:hover': { opacity: 0.72 }\n}));\n\n// ----------------------------------------------------------------------\n\nUploadAvatar.propTypes = {\n  error: PropTypes.bool,\n  file: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n  caption: PropTypes.node,\n  sx: PropTypes.object\n};\n\nexport default function UploadAvatar({ error, file, caption, sx, ...other }) {\n  const { getRootProps, getInputProps, isDragActive, isDragReject, fileRejections } = useDropzone({\n    multiple: false,\n    ...other\n  });\n\n  const ShowRejectionItems = () => (\n    <Paper\n      variant=\"outlined\"\n      sx={{\n        py: 1,\n        px: 2,\n        my: 2,\n        borderColor: 'error.light',\n        bgcolor: (theme) => alpha(theme.palette.error.main, 0.08)\n      }}\n    >\n      {fileRejections.map(({ file, errors }) => {\n        const { path, size } = file;\n        return (\n          <Box key={path} sx={{ my: 1 }}>\n            <Typography variant=\"subtitle2\" noWrap>\n              {path} - {fData(size)}\n            </Typography>\n            {errors.map((e) => (\n              <Typography key={e.code} variant=\"caption\" component=\"p\">\n                - {e.message}\n              </Typography>\n            ))}\n          </Box>\n        );\n      })}\n    </Paper>\n  );\n\n  return (\n    <>\n      <RootStyle sx={sx}>\n        <DropZoneStyle\n          {...getRootProps()}\n          sx={{\n            ...(isDragActive && { opacity: 0.72 }),\n            ...((isDragReject || error) && {\n              color: 'error.main',\n              borderColor: 'error.light',\n              bgcolor: 'error.lighter'\n            })\n          }}\n        >\n          <input {...getInputProps()} />\n\n          {file && (\n            <Box\n              component=\"img\"\n              alt=\"avatar\"\n              src={isString(file) ? file : file.preview}\n              sx={{ zIndex: 8, objectFit: 'cover' }}\n            />\n          )}\n\n          <PlaceholderStyle\n            className=\"placeholder\"\n            sx={{\n              ...(file && {\n                opacity: 0,\n                color: 'common.white',\n                bgcolor: 'grey.900',\n                '&:hover': { opacity: 0.72 }\n              })\n            }}\n          >\n            <Box component={Icon} icon={roundAddAPhoto} sx={{ width: 24, height: 24, mb: 1 }} />\n            <Typography variant=\"caption\">{file ? 'Update photo' : 'Upload photo'}</Typography>\n          </PlaceholderStyle>\n        </DropZoneStyle>\n      </RootStyle>\n\n      {caption}\n\n      {fileRejections.length > 0 && <ShowRejectionItems />}\n    </>\n  );\n}\n","import * as Yup from 'yup';\r\nimport { useSnackbar } from 'notistack5';\r\nimport { useCallback } from 'react';\r\nimport { Form, FormikProvider, useFormik } from 'formik';\r\n// material\r\nimport {\r\n  Box,\r\n  Grid,\r\n  Card,\r\n  Stack,\r\n  TextField,\r\n  FormControlLabel,\r\n  Typography,\r\n  FormHelperText,\r\n  RadioGroup,\r\n  Radio\r\n} from '@material-ui/core';\r\nimport { LoadingButton } from '@material-ui/lab';\r\n// hooks\r\nimport useIsMountedRef from '../../hooks/useIsMountedRef';\r\nimport { UploadAvatar } from '../../components/upload';\r\n// utils\r\nimport { fData } from '../../utils/formatNumber';\r\n//\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { saveDetail } from '../../actions/auth';\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function AccountGeneral() {\r\n  const dispatch = useDispatch();\r\n  const isMountedRef = useIsMountedRef();\r\n  const { enqueueSnackbar } = useSnackbar();\r\n  const user = useSelector(state => state.auth.user);\r\n\r\n  const UpdateUserSchema = Yup.object().shape({\r\n    name: Yup.string().min(2, 'Too Short!').max(50, 'Too Long!').required('Name required'),\r\n    email: Yup.string().email('Email must be a valid email address').required('Email is required')\r\n  });\r\n\r\n  const formik = useFormik({\r\n    enableReinitialize: true,\r\n    initialValues: {\r\n      name: user?.name,\r\n      email: user?.email,\r\n      phone: user?.phone,\r\n      avatar: user?.avatar\r\n    },\r\n\r\n    validationSchema: UpdateUserSchema,\r\n    onSubmit: async (values, { setErrors, setSubmitting }) => {\r\n      try {\r\n        dispatch(saveDetail({ ...values, avatar: values.avatar.file }, enqueueSnackbar));\r\n        // enqueueSnackbar('Update success', { variant: 'success' });\r\n        if (isMountedRef.current) {\r\n          setSubmitting(false);\r\n        }\r\n      } catch (error) {\r\n        if (isMountedRef.current) {\r\n          setErrors({ afterSubmit: error.code });\r\n          setSubmitting(false);\r\n        }\r\n      }\r\n    }\r\n  });\r\n\r\n  const { values, errors, touched, isSubmitting, handleSubmit, getFieldProps, setFieldValue } = formik;\r\n\r\n  const handleDrop = useCallback(\r\n    (acceptedFiles) => {\r\n      const file = acceptedFiles[0];\r\n      // console.log(acceptedFiles);\r\n      if (file) {\r\n        setFieldValue('avatar', {\r\n          file,\r\n          preview: URL.createObjectURL(file)\r\n        });\r\n      }\r\n    },\r\n    [setFieldValue]\r\n  );\r\n\r\n  return (\r\n    <FormikProvider value={formik}>\r\n      <Form autoComplete=\"off\" noValidate onSubmit={handleSubmit}>\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={12} md={4}>\r\n            <Card sx={{ py: 10, px: 3, textAlign: 'center' }}>\r\n              <UploadAvatar\r\n                accept=\"image/*\"\r\n                file={values.avatar}\r\n                maxSize={3145728}\r\n                onDrop={handleDrop}\r\n                error={Boolean(touched.avatar && errors.avatar)}\r\n                caption={\r\n                  <Typography\r\n                    variant=\"caption\"\r\n                    sx={{\r\n                      mt: 2,\r\n                      mx: 'auto',\r\n                      display: 'block',\r\n                      textAlign: 'center',\r\n                      color: 'text.secondary'\r\n                    }}\r\n                  >\r\n                    Allowed *.jpeg, *.jpg, *.png, *.gif\r\n                    <br /> max size of {fData(3145728)}\r\n                  </Typography>\r\n                }\r\n              />\r\n\r\n              <FormHelperText error sx={{ px: 2, textAlign: 'center' }}>\r\n                {touched.avatar && errors.avatar}\r\n              </FormHelperText>\r\n\r\n            </Card>\r\n          </Grid>\r\n\r\n          <Grid item xs={12} md={8}>\r\n            <Card sx={{ p: 3 }}>\r\n              <Stack spacing={{ xs: 2, md: 3 }}>\r\n                <Stack direction={{ xs: 'column', md: 'row' }} spacing={2}>\r\n                  <TextField fullWidth label=\"Name\" {...getFieldProps('name')} />\r\n                </Stack>\r\n\r\n                <Stack direction={{ xs: 'column', md: 'row' }} spacing={2}>\r\n                  <TextField fullWidth label=\"Email Address\" {...getFieldProps('email')} />\r\n                  <TextField fullWidth label=\"Phone Number\" {...getFieldProps('phone')} />\r\n                </Stack>\r\n              </Stack>\r\n\r\n              <Box sx={{ mt: 3, display: 'flex', justifyContent: 'flex-end' }}>\r\n                <LoadingButton type=\"submit\" variant=\"contained\" loading={isSubmitting}>\r\n                  Save Changes\r\n                </LoadingButton>\r\n              </Box>\r\n            </Card>\r\n          </Grid>\r\n        </Grid>\r\n      </Form>\r\n    </FormikProvider>\r\n  );\r\n}\r\n","import { useDispatch } from 'react-redux';\r\nimport * as Yup from 'yup';\r\nimport { useSnackbar } from 'notistack5';\r\nimport { useFormik, Form, FormikProvider } from 'formik';\r\n// material\r\nimport { Stack, Card, TextField } from '@material-ui/core';\r\nimport { LoadingButton } from '@material-ui/lab';\r\nimport useIsMountedRef from '../../hooks/useIsMountedRef';\r\n// utils\r\nimport { resetPassword } from '../../actions/auth';\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function AccountChangePassword() {\r\n  const dispatch = useDispatch();\r\n  const { enqueueSnackbar } = useSnackbar();\r\n  const isMountedRef = useIsMountedRef();\r\n\r\n  const ChangePassWordSchema = Yup.object().shape({\r\n    curPassword: Yup.string().required('Current Password is required'),\r\n    password: Yup.string().min(6, 'Password must be at least 6 characters').required('New Password is required'),\r\n    password2: Yup.string().oneOf([Yup.ref('password'), null], 'Passwords must match')\r\n  });\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      curPassword: '',\r\n      password: '',\r\n      password2: ''\r\n    },\r\n    validationSchema: ChangePassWordSchema,\r\n    onSubmit: async (values, { setErrors, setSubmitting }) => {\r\n      dispatch(resetPassword({ ...values }, enqueueSnackbar));\r\n      setSubmitting(false);\r\n      // alert(JSON.stringify(values, null, 2));\r\n      // enqueueSnackbar('Save success', { variant: 'success' });\r\n      if (isMountedRef.current) {\r\n        setSubmitting(false);\r\n      }\r\n    }\r\n  });\r\n\r\n  const { errors, touched, isSubmitting, handleSubmit, getFieldProps } = formik;\r\n\r\n  return (\r\n    <Card sx={{ p: 3 }}>\r\n      <FormikProvider value={formik}>\r\n        <Form autoComplete=\"off\" noValidate onSubmit={handleSubmit}>\r\n          <Stack spacing={3} alignItems=\"flex-end\">\r\n            <TextField\r\n              {...getFieldProps('curPassword')}\r\n              fullWidth\r\n              autoComplete=\"on\"\r\n              type=\"password\"\r\n              label=\"Current Password\"\r\n              error={Boolean(touched.curPassword && errors.curPassword)}\r\n              helperText={touched.curPassword && errors.curPassword}\r\n            />\r\n\r\n            <TextField\r\n              {...getFieldProps('password')}\r\n              fullWidth\r\n              autoComplete=\"on\"\r\n              type=\"password\"\r\n              label=\"New Password\"\r\n              error={Boolean(touched.password && errors.password)}\r\n              helperText={(touched.password && errors.password) || 'Password must be minimum 6+'}\r\n            />\r\n\r\n            <TextField\r\n              {...getFieldProps('password2')}\r\n              fullWidth\r\n              autoComplete=\"on\"\r\n              type=\"password\"\r\n              label=\"Confirm New Password\"\r\n              error={Boolean(touched.password2 && errors.password2)}\r\n              helperText={touched.password2 && errors.password2}\r\n            />\r\n\r\n            <LoadingButton type=\"submit\" variant=\"contained\" loading={isSubmitting}>\r\n              Save Changes\r\n            </LoadingButton>\r\n          </Stack>\r\n        </Form>\r\n      </FormikProvider>\r\n    </Card>\r\n  );\r\n}\r\n","import { Icon } from '@iconify/react';\nimport { capitalCase } from 'change-case';\nimport { useState, useEffect } from 'react';\nimport roundVpnKey from '@iconify/icons-ic/round-vpn-key';\nimport roundAccountBox from '@iconify/icons-ic/round-account-box';\n// material\nimport { Container, Tab, Box, Tabs, Stack } from '@material-ui/core';\n// redux\nimport { useDispatch } from 'react-redux';\n// hooks\nimport useSettings from '../../hooks/useSettings';   \n// components\nimport Page from '../../components/Page';\nimport AccountGeneral from './AccountGeneral'\nimport AccountChangePassword from './AccountChangePassword'\nimport { RootStyle } from '../styled/StyledInput';\n\n// ----------------------------------------------------------------------\n\nexport default function UserAccount() {  \n  const { themeStretch } = useSettings();\n  const [currentTab, setCurrentTab] = useState('general');\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    \n  }, [dispatch]);\n\n  const ACCOUNT_TABS = [\n    {\n      value: 'general',\n      icon: <Icon icon={roundAccountBox} width={20} height={20} />,\n      component: <AccountGeneral />\n    },\n    {\n      value: 'change_password',\n      icon: <Icon icon={roundVpnKey} width={20} height={20} />,\n      component: <AccountChangePassword />\n    }\n  ];\n\n  const handleChangeTab = (event, newValue) => {\n    setCurrentTab(newValue);\n  };\n\n  return (\n    <Page title=\"User: Account Settings | Minimal-UI\">\n      <RootStyle>\n\n        <Container maxWidth={themeStretch ? false : 'lg'}>\n\n          <Stack spacing={5}>\n            <Tabs\n              value={currentTab}\n              scrollButtons=\"auto\"\n              variant=\"scrollable\"\n              allowScrollButtonsMobile\n              onChange={handleChangeTab}\n            >\n              {ACCOUNT_TABS.map((tab) => (\n                <Tab disableRipple key={tab.value} label={capitalCase(tab.value)} icon={tab.icon} value={tab.value} />\n              ))}\n            </Tabs>\n\n\n            {ACCOUNT_TABS.map((tab) => {\n              const isMatched = tab.value === currentTab;\n              return isMatched && <Box key={tab.value}>{tab.component}</Box>;\n            })}\n          </Stack>\n        </Container>\n      </RootStyle>\n    </Page>\n  );\n}\n"],"sourceRoot":""}