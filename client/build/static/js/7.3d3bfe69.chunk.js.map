{"version":3,"sources":["actions/manager.js","lib/abi.js","lib/ABC2-M_summary.js","lib/mint.js","pages/AlertDialog.js","pages/payment/StripeForm.js","pages/payment/PaypalForm.js","pages/payment/Payment.js","pages/Test.js"],"names":["setModal","open","text","dispatch","type","SET_MODAL","payload","modalOpen","modalText","showPayment","SHOW_PAYMENT","getNFTs","nftIds","a","length","getTokenUris","tokenURIs","console","log","nfts","i","axios","get","nft","data","push","tokenId","message","setQuantity","quantity","SET_QUANTITY","buyNFTs","amount","api","post","res","NFT_ABI","TOKEN_URIS","rinkebynet","priceFeed","Web3","eth","Contract","NFT_ADDRESS","mint","account","abc_contract","window","web3","Number","methods","totalSupply","call","tokenCounter","mintUris","slice","send","from","value","utils","toWei","toString","status","getTotalMinted","tokenIds","tokenUris","tokenURI","hasEnoughEth","getBalance","balance","isBigger","String","x","y","repeat","getEthPrice","latestRoundData","answer","ethPrice","AlertDialog","useDispatch","useSelector","state","manager","handleClose","onClose","id","sx","color","fontSize","onClick","autoFocus","StripeForm","onSucceed","useState","setTotalPrice","succeeded","setSucceeded","error","setError","processing","setProcessing","disabled","setDisabled","clientSecret","setClientSecret","postalCode","setpostalCode","stripe","useStripe","elements","useElements","useEffect","totalPrice","getClientSecret","handleChange","event","empty","handleSubmit","ev","preventDefault","confirmCardPayment","payment_method","card","getElement","CardElement","onSubmit","direction","justifyContent","spacint","options","style","base","fontFamily","fontSmoothing","invalid","iconColor","onChange","variant","width","role","className","PaypalForm","currency_code","components","intent","commit","label","createOrder","actions","order","create","purchase_units","shipping","name","full_name","address","address_line_1","address_line_2","admin_area_2","admin_area_1","postal_code","country_code","e","onShippingChange","Promise","resolve","reject","Error","onApprove","onError","err","onInit","PRICE","process","promise","loadStripe","Accordion","styled","props","disableGutters","elevation","square","theme","border","palette","divider","borderBottom","display","AccordionSummary","expandIcon","backgroundColor","mode","flexDirection","transform","marginLeft","spacing","AccordionDetails","MuiAccordionDetails","padding","borderTop","Payment","setEthPrice","React","expanded","setExpanded","paymentOpen","getETHPrice","panel","newExpanded","Dialog","DialogContent","toFixed","Box","component","src","height","NETWORK","RootStyle","breakpoints","up","ButtonStyle","Button","borderRadius","minWidth","ConnectButton","LoadingButton","Test","useTheme","isDesktop","useMediaQuery","isAuthenticated","auth","setAccount","initWeb3","setInitWeb3","minting","setMinting","buying","setBuying","totalMinted","setTotalMinted","ethereum","on","accounts","conMetamask","networkId","setTotal","request","method","chainId","enable","undefined","total","Stack","p","backgroundImage","alignItems","Typography","textAlign","InputBase","fullWidth","inputProps","min","max","target","loading","loadingPosition","size","href","textDecoration"],"mappings":"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","file":"static/js/7.3d3bfe69.chunk.js","sourcesContent":["import {\r\n  SET_MODAL, SET_NFTS, SET_QUANTITY, SHOW_PAYMENT\r\n} from './types';\r\n\r\nimport api from '../utils/api'\r\nimport axios from 'axios'\r\nimport { getTokenUris } from '../lib/mint';\r\n\r\nexport const setModal = (open, text) => dispatch => {\r\n  dispatch({\r\n    type: SET_MODAL,\r\n    payload: { modalOpen: open, modalText: text }\r\n  })\r\n}\r\n\r\nexport const showPayment = (open) => dispatch => {\r\n  dispatch({\r\n    type: SHOW_PAYMENT,\r\n    payload: open\r\n  })\r\n}\r\n\r\nexport const getNFTs = async (nftIds) => {\r\n  try {\r\n    if (nftIds.length === 0) {\r\n      return []\r\n    }\r\n    let tokenURIs = await getTokenUris(nftIds)\r\n    console.log(tokenURIs)\r\n    let nfts = []\r\n    for (let i = 0; i < tokenURIs.length; i++) {\r\n      let nft = (await axios.get(tokenURIs[i])).data\r\n      nfts.push({ ...nft, tokenId: nftIds[i] })\r\n    }\r\n    console.log('nfts', nfts)\r\n    return nfts\r\n  } catch (err) {\r\n    console.log(err.message)\r\n    return []\r\n  }\r\n}\r\n\r\nexport const setQuantity = (quantity) => dispatch => {\r\n  dispatch({\r\n    type: SET_QUANTITY,\r\n    payload: quantity\r\n  })\r\n}\r\n\r\nexport const buyNFTs = async (amount) => {\r\n  try {\r\n    let res = await api.post('/users/buy', { amount })\r\n    console.log(res.data)\r\n    return res.data\r\n  } catch (err) {\r\n    console.log(err)\r\n    return false\r\n  }\r\n}\r\n","export const NFT_ABI = [\r\n\t{\r\n\t\t\"inputs\": [],\r\n\t\t\"stateMutability\": \"nonpayable\",\r\n\t\t\"type\": \"constructor\"\r\n\t},\r\n\t{\r\n\t\t\"anonymous\": false,\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": true,\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"owner\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": true,\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"approved\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": true,\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"tokenId\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"Approval\",\r\n\t\t\"type\": \"event\"\r\n\t},\r\n\t{\r\n\t\t\"anonymous\": false,\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": true,\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"owner\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": true,\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"operator\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": false,\r\n\t\t\t\t\"internalType\": \"bool\",\r\n\t\t\t\t\"name\": \"approved\",\r\n\t\t\t\t\"type\": \"bool\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"ApprovalForAll\",\r\n\t\t\"type\": \"event\"\r\n\t},\r\n\t{\r\n\t\t\"anonymous\": false,\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": true,\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"previousOwner\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": true,\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"newOwner\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"OwnershipTransferred\",\r\n\t\t\"type\": \"event\"\r\n\t},\r\n\t{\r\n\t\t\"anonymous\": false,\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": true,\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"from\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": true,\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"to\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": true,\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"tokenId\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"Transfer\",\r\n\t\t\"type\": \"event\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"to\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"tokenId\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"approve\",\r\n\t\t\"outputs\": [],\r\n\t\t\"stateMutability\": \"nonpayable\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"owner\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"balanceOf\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"tokenId\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"getApproved\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"owner\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"operator\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"isApprovedForAll\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"bool\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"bool\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"string[]\",\r\n\t\t\t\t\"name\": \"tokenUris\",\r\n\t\t\t\t\"type\": \"string[]\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"mint\",\r\n\t\t\"outputs\": [],\r\n\t\t\"stateMutability\": \"payable\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [],\r\n\t\t\"name\": \"name\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"string\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"string\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [],\r\n\t\t\"name\": \"owner\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"tokenId\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"ownerOf\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [],\r\n\t\t\"name\": \"renounceOwnership\",\r\n\t\t\"outputs\": [],\r\n\t\t\"stateMutability\": \"nonpayable\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"from\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"to\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"tokenId\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"safeTransferFrom\",\r\n\t\t\"outputs\": [],\r\n\t\t\"stateMutability\": \"nonpayable\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"from\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"to\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"tokenId\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"bytes\",\r\n\t\t\t\t\"name\": \"_data\",\r\n\t\t\t\t\"type\": \"bytes\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"safeTransferFrom\",\r\n\t\t\"outputs\": [],\r\n\t\t\"stateMutability\": \"nonpayable\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"operator\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"bool\",\r\n\t\t\t\t\"name\": \"approved\",\r\n\t\t\t\t\"type\": \"bool\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"setApprovalForAll\",\r\n\t\t\"outputs\": [],\r\n\t\t\"stateMutability\": \"nonpayable\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"string\",\r\n\t\t\t\t\"name\": \"baseURI_\",\r\n\t\t\t\t\"type\": \"string\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"setBaseURI\",\r\n\t\t\"outputs\": [],\r\n\t\t\"stateMutability\": \"nonpayable\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"price\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"setPrice\",\r\n\t\t\"outputs\": [],\r\n\t\t\"stateMutability\": \"nonpayable\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"bytes4\",\r\n\t\t\t\t\"name\": \"interfaceId\",\r\n\t\t\t\t\"type\": \"bytes4\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"supportsInterface\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"bool\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"bool\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [],\r\n\t\t\"name\": \"symbol\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"string\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"string\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [],\r\n\t\t\"name\": \"tokenCounter\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"tokenId\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"tokenURI\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"string\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"string\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [],\r\n\t\t\"name\": \"totalSupply\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"from\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"to\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"tokenId\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"transferFrom\",\r\n\t\t\"outputs\": [],\r\n\t\t\"stateMutability\": \"nonpayable\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"newOwner\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"transferOwnership\",\r\n\t\t\"outputs\": [],\r\n\t\t\"stateMutability\": \"nonpayable\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [],\r\n\t\t\"name\": \"withdraw\",\r\n\t\t\"outputs\": [],\r\n\t\t\"stateMutability\": \"nonpayable\",\r\n\t\t\"type\": \"function\"\r\n\t}\r\n]","export const TOKEN_URIS = [\r\n    \"https://ipfs.infura.io/ipfs/QmecXjvZCTuEa8VWDA7n5VuDsuZrDcjoVbo5cJux8YrdXc/metadata1.json\",\r\n    \"https://ipfs.infura.io/ipfs/QmW3e7qwKesD5qF58uUXXyU2HgjvSFLa86hQ2EjtpzPk36/metadata2.json\",\r\n    \"https://ipfs.infura.io/ipfs/QmUprBjv6N3pesa6qud5mBUDWKYDxmNPJojRpNPviXEJem/metadata3.json\",\r\n    \"https://ipfs.infura.io/ipfs/QmXC5U5JMcY9CaxULz5pGr8SownjKXN1Xu4feCD1g4y8j7/metadata4.json\",\r\n    \"https://ipfs.infura.io/ipfs/QmRxYzbvVTFab3LGsMFymHx4gYxsadQ7hNq8TEK32LbpGq/metadata5.json\",\r\n    \"https://ipfs.infura.io/ipfs/QmbYy5pnTYDa4uUHZM6mJ9mDEkrk9PvhZpCmS9q42tnKyG/metadata6.json\",\r\n    \"https://ipfs.infura.io/ipfs/QmZ9Qe1fwwVxZWem8qzFA3oDkNgVxjuz3nm5SkVuLim6Hy/metadata7.json\",\r\n    \"https://ipfs.infura.io/ipfs/QmNcouX2jnWGNm3dbrJnos4zPDgFuba2r7rnSxqBu8Ygy4/metadata8.json\",\r\n    \"https://ipfs.infura.io/ipfs/QmURBmTJoyU793YiWTF96QRHx6Q2NuDrF4bJ1GubCzqESH/metadata9.json\",\r\n    \"https://ipfs.infura.io/ipfs/QmPAD1R226osXoSiy5zb99W3aiUFMKQ5EmmxRZz7xEHkk3/metadata10.json\",\r\n    \"https://ipfs.infura.io/ipfs/QmVsiJ6Fug19CXCspKbUmxvFmWZmaCLNirwanLwBCHtMhR/metadata11.json\",\r\n    \"https://ipfs.infura.io/ipfs/QmPgag1z4g3Rrh99MGWCcJUgCZbTXNBYq9C57sJV2y81SE/metadata12.json\",\r\n    \"https://ipfs.infura.io/ipfs/Qmd4nsKtqCdz5C5tt6xWyNZJcQ59N6iVSTMZkaxLzwfGA2/metadata13.json\",\r\n    \"https://ipfs.infura.io/ipfs/QmTMZR9iEmTv9ueh1WdrcrjbQzLagEPEeJ9ztJAhpaeAvD/metadata14.json\",\r\n    \"https://ipfs.infura.io/ipfs/QmTqH5uTVpTcQZXWRstMDLzm89nUsJ2KRewYyZKqEAgJvi/metadata15.json\",\r\n    \"https://ipfs.infura.io/ipfs/Qmc1Gh2uBSJVGC5yYKLbBKQ8zMuSEwD6V7wG9DVWWX6TmT/metadata16.json\",\r\n    \"https://ipfs.infura.io/ipfs/QmNrWjQzFhdDKN7jvnPtRihMrUDTxXDRwBuAyHMeMcxKLR/metadata17.json\",\r\n    \"https://ipfs.infura.io/ipfs/QmeWfrNCvUeidfSpo7Necw7BmU2ymtpXKpUidcrrH3PGfE/metadata18.json\",\r\n    \"https://ipfs.infura.io/ipfs/QmP1ZQT3vcQuP6CQHRbMxv59KeSMx4UAKst2TPDkF9SuJs/metadata19.json\",\r\n    \"https://ipfs.infura.io/ipfs/QmZYJF1v4hc8uzfPr72ba7Vc2JnutBFdzM4zhedBD7KHxP/metadata20.json\",\r\n    \"https://ipfs.infura.io/ipfs/QmNwd9XMzc9wegWVFa4dkgTE8mVRvW7gzhw4a1oc6SBQAg/metadata21.json\",\r\n    \"https://ipfs.infura.io/ipfs/QmV5vWSCkwjrXoKuU5jBHG1SsbCwfhcBWgs2xVVbuHv39f/metadata22.json\",\r\n    \"https://ipfs.infura.io/ipfs/QmPgmCVpu4Hci1AE6jLoyM3jGEBaTuCD72DtLyzFcoRDmu/metadata23.json\",\r\n    \"https://ipfs.infura.io/ipfs/QmPBvNno1LSB5tYtHz34QdRVnZNe96KHQLcQRY2mHoSYXS/metadata24.json\",\r\n    \"https://ipfs.infura.io/ipfs/QmSUr9KfD5ydQxCr5iXsRGXZK4tSrnsvPxMFXfe9HuwY4P/metadata25.json\",\r\n    \"https://ipfs.infura.io/ipfs/QmUi91tfsvUGLrs8bMh5Uaep3d4AZqVz9hWeNrEyH6HbCf/metadata26.json\",\r\n    \"https://ipfs.infura.io/ipfs/QmT3nXfbqAB9zZGUH4pWsinFm931NpkBD59xjMvzGFFvpv/metadata27.json\",\r\n    \"https://ipfs.infura.io/ipfs/QmUC7cLgD84u4yPxiNeBGoFvM9aZgHFyvm9kSh5bFMLE2d/metadata28.json\",\r\n    \"https://ipfs.infura.io/ipfs/QmTBtFuq1FsBbYgrwX3jqNKyM87eWzjwzhz285CVmY62mx/metadata29.json\",\r\n    \"https://ipfs.infura.io/ipfs/QmdGUxcUsxpuVFR3maCqzkUPiJ6zgbfy5DH1anw5APN9Hg/metadata30.json\",\r\n    \"https://ipfs.infura.io/ipfs/QmNWFFXTk44acpD9uPX7WZhugQgfmcqz8DzK7NG9xjiP2k/metadata31.json\",\r\n    \"https://ipfs.infura.io/ipfs/QmUPxXFSktyRvoXaYtMc7AmcC55M6BReE1uqzMjN9Y1ycq/metadata32.json\",\r\n    \"https://ipfs.infura.io/ipfs/QmamTnP1Fo4oXBGTQRfeQyWZEMZdvnbLa1YwuU6wCoFSrn/metadata33.json\",\r\n    \"https://ipfs.infura.io/ipfs/QmSYLQme2LakjMZAkqkp38A1cFC9txPWwKiFG6Qps1F6XU/metadata34.json\",\r\n    \"https://ipfs.infura.io/ipfs/Qmdb39zywezhCRcWnATQnJyrRUuRFASs6Sc2M3xTsyQWM4/metadata35.json\",\r\n    \"https://ipfs.infura.io/ipfs/QmU6LGV6r5JikX6R7SC2YUCV4NhmL63RhJWdbtuGbXdxBU/metadata36.json\",\r\n    \"https://ipfs.infura.io/ipfs/QmVQQvGRYXsU39abfhkA3mp58mXkMVLAffCCmmBqmS6o9y/metadata37.json\",\r\n    \"https://ipfs.infura.io/ipfs/QmcHQzpptLS2SAYwpp4dzBfzBt82Ytag8AKcfVNUBvZ9CA/metadata38.json\",\r\n    \"https://ipfs.infura.io/ipfs/QmZKmkfeUMAJzzfR9NsygLhwsS4DXWQ28hFHRzLnWjEAzb/metadata39.json\",\r\n    \"https://ipfs.infura.io/ipfs/QmaMBkxLPmweVvpGnT7aj9HZMDofy8mCx7rW41jiTu1eQt/metadata40.json\",\r\n    \"https://ipfs.infura.io/ipfs/QmXLi5JAQaootZ26eXqVLnYaVEGY8ihQVu8rbp1rLW2wko/metadata41.json\",\r\n    \"https://ipfs.infura.io/ipfs/QmZqwFHyVa8Jc383KgVXxsZvccDe9bRFAazSs84itETR1y/metadata42.json\",\r\n    \"https://ipfs.infura.io/ipfs/QmafgUHGvB1QzsyySsoGKHwnUGtmPvtkym9xzDtPUBkMJZ/metadata43.json\",\r\n    \"https://ipfs.infura.io/ipfs/QmZzGyUvvL4MFX8qpbg9vmWeRai79JJf5J6V7cnt3sxqwE/metadata44.json\",\r\n    \"https://ipfs.infura.io/ipfs/QmXbRZ89B21bsem24MPXhgYNSNKuDpYyeP4D2RDkRn7SWh/metadata45.json\",\r\n    \"https://ipfs.infura.io/ipfs/QmaGESXcRF1t7JeKuK8wcaTXrwbjZBED4DZgLYmnwemFH8/metadata46.json\",\r\n    \"https://ipfs.infura.io/ipfs/QmbyMf1ZUACCQVDWivmnzo55Fcm9XNbmci2t3SqdeJyppU/metadata47.json\",\r\n    \"https://ipfs.infura.io/ipfs/QmNrMKQWrCXANQBp2JWbaBLiDiaTBfLQg8mb6qfrbJqJHA/metadata48.json\",\r\n    \"https://ipfs.infura.io/ipfs/QmSufZFKjCw3rp7xHt9aUDnpYRChL1CF4ud7Kfnw9WEnoW/metadata49.json\",\r\n    \"https://ipfs.infura.io/ipfs/QmbVjgeZaLchuo8iSqftRLwWFQrWogUh85NYS8MRY5A8J2/metadata50.json\"\r\n]","import Web3 from 'web3'\r\nimport { NFT_ABI } from './abi.js'\r\nimport { TOKEN_URIS } from './ABC2-M_summary.js'\r\n\r\nconst rinkebynet = 'https://rinkeby.infura.io/v3/9aa3d95b3bc440fa88ea12eaa4456161';\r\nconst mainnet = 'https://mainnet.infura.io/v3/9aa3d95b3bc440fa88ea12eaa4456161';\r\nconst web3 = new Web3(mainnet)\r\nconst aggregatorV3InterfaceABI = [{ \"inputs\": [], \"name\": \"decimals\", \"outputs\": [{ \"internalType\": \"uint8\", \"name\": \"\", \"type\": \"uint8\" }], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"description\", \"outputs\": [{ \"internalType\": \"string\", \"name\": \"\", \"type\": \"string\" }], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [{ \"internalType\": \"uint80\", \"name\": \"_roundId\", \"type\": \"uint80\" }], \"name\": \"getRoundData\", \"outputs\": [{ \"internalType\": \"uint80\", \"name\": \"roundId\", \"type\": \"uint80\" }, { \"internalType\": \"int256\", \"name\": \"answer\", \"type\": \"int256\" }, { \"internalType\": \"uint256\", \"name\": \"startedAt\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"updatedAt\", \"type\": \"uint256\" }, { \"internalType\": \"uint80\", \"name\": \"answeredInRound\", \"type\": \"uint80\" }], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"latestRoundData\", \"outputs\": [{ \"internalType\": \"uint80\", \"name\": \"roundId\", \"type\": \"uint80\" }, { \"internalType\": \"int256\", \"name\": \"answer\", \"type\": \"int256\" }, { \"internalType\": \"uint256\", \"name\": \"startedAt\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"updatedAt\", \"type\": \"uint256\" }, { \"internalType\": \"uint80\", \"name\": \"answeredInRound\", \"type\": \"uint80\" }], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"version\", \"outputs\": [{ \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" }], \"stateMutability\": \"view\", \"type\": \"function\" }]\r\nconst eth_usd = \"0x5f4eC3Df9cbd43714FE2740f5E3616155c5b8419\"\r\nconst priceFeed = new web3.eth.Contract(aggregatorV3InterfaceABI, eth_usd)\r\n\r\nconst NFT_ADDRESS = '0xfFA4683b9aC4aAD95416804f4cac0e23f527F63c'\r\nconst PRICE = 0.05\r\n\r\nexport const mint = async (account, amount) => {\r\n    let abc_contract = new window.web3.eth.Contract(NFT_ABI, NFT_ADDRESS);\r\n    let tokenCounter = Number(await abc_contract.methods.totalSupply().call());\r\n    let mintUris = TOKEN_URIS.slice(tokenCounter, tokenCounter + amount);\r\n    console.log('mint tokenUris', mintUris);\r\n    let res = await abc_contract.methods.mint(mintUris).send({ from: account, value: window.web3.utils.toWei((PRICE * amount).toString(), \"ether\") })\r\n    return res.status\r\n}\r\n\r\nexport const getTotalMinted = async () => {\r\n    let web3 = new Web3(rinkebynet)\r\n    let abc_contract = new web3.eth.Contract(NFT_ABI, NFT_ADDRESS);\r\n    let tokenCounter = Number(await abc_contract.methods.totalSupply().call());\r\n    console.log('totalminted', tokenCounter)\r\n    return tokenCounter;\r\n}\r\n\r\nexport const getTokenUris = async (tokenIds) => {\r\n    let web3 = new Web3(rinkebynet)\r\n    let abc_contract = new web3.eth.Contract(NFT_ABI, NFT_ADDRESS);\r\n    let tokenUris = []\r\n    for (let i = 0; i < tokenIds.length; i++) {\r\n        tokenUris.push(await abc_contract.methods.tokenURI(tokenIds[i]).call())\r\n    }\r\n    return tokenUris\r\n}\r\n\r\nexport const hasEnoughEth = async (account, amount) => {\r\n    try {\r\n        let balance = await window.web3.eth.getBalance(account);\r\n        // console.log(balance, window.web3.utils.toWei((PRICE * amount).toString, \"ether\"));\r\n        if (isBigger(String(balance), String(window.web3.utils.toWei((PRICE * amount).toString(), \"ether\"))) >= 0) {\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    } catch (err) {\r\n        console.log(err.message);\r\n        return false;\r\n    }\r\n}\r\n\r\nexport const isBigger = (x, y) => {\r\n    x = x || \"0\";\r\n    y = y || \"0\";\r\n    if (x.length > y.length) y = \"0\".repeat(x.length - y.length) + y;\r\n    else if (y.length > x.length) x = \"0\".repeat(y.length - x.length) + x;\r\n\r\n    for (let i = 0; i < x.length; i++) {\r\n        if (x[i] < y[i]) return -1;\r\n        if (x[i] > y[i]) return 1;\r\n    }\r\n    return 0;\r\n}\r\n\r\nexport const getEthPrice = async () => {\r\n    try {\r\n        let ethPrice = (await priceFeed.methods.latestRoundData().call()).answer / (10 ** 8)\r\n        console.log(\"ETH / USD\", ethPrice)\r\n        return ethPrice\r\n    } catch (err) {\r\n        console.log(err.message)\r\n        return 0\r\n    }\r\n}","/* eslint-disable */\r\nimport { useSelector, useDispatch } from 'react-redux'\r\n// material\r\n// import { Button, Dialog,  DialogActions, DialogContent, DialogContentText } from '@material-ui/core';\r\nimport Button from '@material-ui/core/Button'\r\nimport Dialog from '@material-ui/core/Dialog'\r\nimport DialogActions from '@material-ui/core/DialogActions'\r\nimport DialogContent from '@material-ui/core/DialogContent'\r\nimport DialogContentText from '@material-ui/core/DialogContentText'\r\n\r\n// ----------------------------------------------------------------------\r\nimport { setModal } from '../actions/manager';\r\n\r\nexport default function AlertDialog() {\r\n    const dispatch = useDispatch();\r\n    const open = useSelector(state => state.manager.modalOpen);\r\n    const text = useSelector(state => state.manager.modalText);\r\n\r\n    const handleClose = () => {\r\n        dispatch(setModal(false));\r\n    };\r\n\r\n    return (\r\n        <Dialog open={open} onClose={handleClose}>\r\n            {/* <DialogTitle>Use Google's location service?</DialogTitle> */}\r\n            <DialogContent>\r\n                <DialogContentText id=\"alert-dialog-description\" sx={{ color: 'white', fontSize: '18px' }}>\r\n                    {text}\r\n                </DialogContentText>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={handleClose} autoFocus>\r\n                    Ok\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport {\r\n    CardElement,\r\n    useStripe,\r\n    useElements\r\n} from \"@stripe/react-stripe-js\";\r\nimport { Button, Stack, Typography } from '@mui/material';\r\nimport api from '../../utils/api';\r\n\r\nconst StripeForm = ({ onSucceed }) => {\r\n    const quantity = useSelector(state => state.manager.quantity)\r\n    const [totalPrice, setTotalPrice] = useState(0)\r\n    const [succeeded, setSucceeded] = useState(false);\r\n    const [error, setError] = useState(null);\r\n    const [processing, setProcessing] = useState('');\r\n    const [disabled, setDisabled] = useState(true);\r\n    const [clientSecret, setClientSecret] = useState('');\r\n    const [postalCode, setpostalCode] = useState('');\r\n    const stripe = useStripe();\r\n    const elements = useElements();\r\n\r\n    useEffect(() => {\r\n        const getClientSecret = async () => {\r\n            try {\r\n                console.log(\"post create-payment\");\r\n                const res = await api.post('/stripe/create-payment-intent', { quantity });\r\n                setClientSecret(res.data.clientSecret);\r\n                setTotalPrice(res.data.totalPrice)\r\n                console.log('getclientsecret', res.data.clientSecret);\r\n            } catch (err) {\r\n                console.log('getclientsecret err', err);\r\n            }\r\n        }\r\n        if (!clientSecret) {\r\n            getClientSecret();\r\n        }\r\n    }, []);\r\n\r\n    const cardStyle = {\r\n        style: {\r\n            base: {\r\n                color: \"#32325d\",\r\n                fontFamily: 'Arial, sans-serif',\r\n                fontSmoothing: \"antialiased\",\r\n                fontSize: \"16px\",\r\n                \"::placeholder\": {\r\n                    color: \"#32325d\"\r\n                }\r\n            },\r\n            invalid: {\r\n                color: \"#fa755a\",\r\n                iconColor: \"#fa755a\"\r\n            }\r\n        }\r\n    };\r\n\r\n    const handleChange = async (event) => {\r\n        // Listen for changes in the CardElement\r\n        // and display any errors as the customer types their card details\r\n        setDisabled(event.empty);\r\n        setError(event.error ? event.error.message : \"\");\r\n        setpostalCode(event.value.postalCode);\r\n    };\r\n\r\n    const handleSubmit = async ev => {\r\n        ev.preventDefault();\r\n        setProcessing(true);\r\n        console.log('clientSecret', clientSecret);\r\n\r\n        const payload = await stripe.confirmCardPayment(clientSecret, {\r\n            // receipt_email: email,\r\n            payment_method: {\r\n                card: elements.getElement(CardElement)\r\n            }\r\n        });\r\n        // console.log('payload', payload);\r\n        // console.log(\"card\",elements.getElement(CardElement));\r\n\r\n        if (payload.error) {\r\n            setError(`Payment failed ${payload.error.message}`);\r\n            setProcessing(false);\r\n        } else {\r\n            console.log('stripe success');\r\n            setError(null);\r\n            setProcessing(false);\r\n            setSucceeded(true);\r\n            // props.onSucceed(email, postalCode);\r\n            onSucceed(postalCode);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <Stack direction=\"column\" justifyContent=\"center\" spacint={2}>\r\n                <CardElement id=\"card-element\" options={cardStyle} onChange={handleChange} />\r\n                <Button type='submit' color='primary' variant=\"contained\"\r\n                    disabled={processing || disabled || succeeded}\r\n                    id=\"submit\" sx={{ width: \"100%\" }}\r\n                >\r\n                    <span id=\"button-text\">\r\n                        {processing ? (\r\n                            // <div className=\"spinner\" id=\"spinner\"></div>\r\n                            `wait a moment...`\r\n                        ) : (\r\n                            `CONFIRM & PAY`\r\n                        )}\r\n                    </span>\r\n                </Button>\r\n\r\n                {/* Show any error that happens when processing the payment */}\r\n                {error && (\r\n                    <Typography variant='body1' color='error' role=\"alert\">\r\n                        {error}\r\n                    </Typography>\r\n                )}\r\n                {/* Show a success message upon completion */}\r\n                <p className={succeeded ? \"result-message\" : \"result-message hidden\"}>\r\n                    Payment succeeded.\r\n                    {/* <a\r\n                        href={`https://dashboard.stripe.com/test/payments`}\r\n                    >\r\n                        {\" \"}\r\n                        Stripe dashboard.\r\n                    </a> Refresh the page to pay again. */}\r\n                </p>\r\n            </Stack>\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default StripeForm\r\n\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport { Stack, Box, Button } from \"@mui/material\";\r\nimport { PayPalScriptProvider, PayPalButtons } from \"@paypal/react-paypal-js\";\r\n\r\nconst PaypalForm = ({ onSucceed }) => {\r\n    const [clicked, setClicked] = useState(false);\r\n    const PAYMENT_CURRENCY = \"USD\";\r\n    const amount = {\r\n        currency_code: PAYMENT_CURRENCY,\r\n        value: \"10\"\r\n    };\r\n\r\n    function createOrder(data, actions) {\r\n        // throw new Error(\"force the createOrder callback to fail\");\r\n        return actions.order.create({\r\n            purchase_units: [\r\n                {\r\n                    amount,\r\n                    shipping: {\r\n                        // name: \"Hello Brother\",\r\n                        // method: \"United States Postal Service\",\r\n                        name: {\r\n                            full_name: \"John\"\r\n                        },\r\n                        type: \"SHIPPING\",\r\n                        address: {\r\n                            address_line_1: \"test\",\r\n                            address_line_2: \"test\",\r\n                            admin_area_2: \"asd\",\r\n                            admin_area_1: \"CA\",\r\n                            postal_code: \"95131\",\r\n                            country_code: \"US\"\r\n                        }\r\n                    }\r\n                }\r\n            ]\r\n            // application_context: {\r\n            //   shipping_preference: \"NO_SHIPPING\"\r\n            // }\r\n        });\r\n    }\r\n    function onShippingChange(data, actions) {\r\n        console.log(\"inside onshipping change\", data);\r\n        // Trying to send error\r\n        return new Promise(function (resolve, reject) {\r\n            reject(new Error());\r\n        });\r\n\r\n        if (data.selected_shipping_option) {\r\n            return actions.resolve();\r\n        }\r\n        return actions.order.patch([\r\n            {\r\n                op: \"replace\",\r\n                path: \"/purchase_units/@reference_id=='default'/amount\",\r\n                value: {\r\n                    currency_code: PAYMENT_CURRENCY,\r\n                    value: \"12\"\r\n                }\r\n            },\r\n            {\r\n                op: \"add\",\r\n                path: \"/purchase_units/@reference_id=='default'/shipping/address\",\r\n                value: {\r\n                    address_line_1: \"test\",\r\n                    address_line_2: \"test\",\r\n                    admin_area_2: \"asd\",\r\n                    admin_area_1: \"CA\",\r\n                    postal_code: \"95131\",\r\n                    country_code: \"US\"\r\n                }\r\n            }\r\n        ]);\r\n\r\n        // on initial load\r\n        return actions.approve();\r\n        // works fine with\r\n        // return actions.resolve();\r\n    }\r\n    function oninit(data, actions) {\r\n        // actions.disable();\r\n        // return actions.disable();\r\n        console.log(\"inside init\");\r\n    }\r\n    function clickPaypal(e, data, actions) {\r\n        // actions.disable();\r\n        console.log(\"inside click\");\r\n        // return actions.resolve();\r\n    }\r\n    function onApprove(data, actions) {\r\n        console.log(\"data\", data);\r\n        onSucceed(data);\r\n        // return actions.order.authorize().then((details) => {\r\n        //   console.log(details);\r\n        //   console.log(details.purchase_units[0].payments.authorizations[0].id);\r\n        // });\r\n    }\r\n    function onError(err) {\r\n        console.error(\"error from the onError callback\", err);\r\n    }\r\n    return (\r\n        <Stack direction='column'>\r\n            <PayPalScriptProvider\r\n                options={{\r\n                    \"client-id\": \"ASNOXtf9lVa63O8sWpE8Sk84FmdMIXvQ6uRAnT_YGZ5d3Q_lmCDUNCMIew184piwJbzJVL_eaWe7wpf6\",\r\n                    components: \"buttons\",\r\n                    intent: \"authorize\",\r\n                    commit: false,\r\n                    \"disable-funding\": \"credit,card\"\r\n                }}\r\n            >\r\n                <PayPalButtons\r\n                    style={{ color: \"white\", label: \"checkout\" }}\r\n                    createOrder={createOrder}\r\n                    onClick={clickPaypal}\r\n                    onShippingChange={onShippingChange}\r\n                    onApprove={onApprove}\r\n                    onError={onError}\r\n                    onInit={oninit}\r\n                />\r\n            </PayPalScriptProvider>\r\n        </Stack>\r\n    );\r\n}\r\n\r\nexport default PaypalForm;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { loadStripe } from \"@stripe/stripe-js\";\r\nimport { Elements } from \"@stripe/react-stripe-js\";\r\nimport { Stack, Typography, Box, Dialog, DialogContent } from \"@mui/material\";\r\nimport MuiAccordion from '@mui/material/Accordion';\r\nimport MuiAccordionSummary from '@mui/material/AccordionSummary';\r\nimport MuiAccordionDetails from '@mui/material/AccordionDetails';\r\nimport { styled } from '@mui/material/styles';\r\nimport ArrowForwardIosSharpIcon from '@mui/icons-material/ArrowForwardIosSharp';\r\nimport StripeForm from \"./StripeForm\";\r\nimport \"./stripe.css\";\r\nimport PaypalForm from \"./PaypalForm\";\r\n///     actions\r\nimport { showPayment } from '../../actions/manager';\r\nimport { getEthPrice } from '../../lib/mint';\r\n\r\nconst PRICE = Number(process.env.REACT_APP_PRICE)\r\n\r\nconst promise = loadStripe(process.env.REACT_APP_STRIPE_PUBKEY_TEST);\r\n\r\nconst Accordion = styled((props) => (\r\n    <MuiAccordion disableGutters elevation={0} square {...props} />\r\n))(({ theme }) => ({\r\n    border: `1px solid ${theme.palette.divider}`,\r\n    '&:not(:last-child)': {\r\n        borderBottom: 0,\r\n    },\r\n    '&:before': {\r\n        display: 'none',\r\n    },\r\n}));\r\n\r\nconst AccordionSummary = styled((props) => (\r\n    <MuiAccordionSummary\r\n        expandIcon={<ArrowForwardIosSharpIcon sx={{ fontSize: '0.9rem' }} />}\r\n        {...props}\r\n    />\r\n))(({ theme }) => ({\r\n    backgroundColor:\r\n        theme.palette.mode === 'dark'\r\n            ? 'rgba(255, 255, 255, .05)'\r\n            : 'rgba(0, 0, 0, .03)',\r\n    flexDirection: 'row-reverse',\r\n    '& .MuiAccordionSummary-expandIconWrapper.Mui-expanded': {\r\n        transform: 'rotate(90deg)',\r\n    },\r\n    '& .MuiAccordionSummary-content': {\r\n        marginLeft: theme.spacing(1),\r\n    },\r\n}));\r\n\r\nconst AccordionDetails = styled(MuiAccordionDetails)(({ theme }) => ({\r\n    padding: theme.spacing(2),\r\n    borderTop: '1px solid rgba(0, 0, 0, .125)',\r\n}));\r\n\r\n\r\nconst Payment = ({ onSucceed }) => {\r\n    const dispatch = useDispatch()\r\n    const quantity = useSelector(state => state.manager.quantity)\r\n    const [ethPrice, setEthPrice] = useState(0)\r\n    const [expanded, setExpanded] = React.useState('stripe');\r\n    const open = useSelector(state => state.manager.paymentOpen)\r\n\r\n    useEffect(() => {\r\n        getETHPrice()\r\n    }, [])\r\n\r\n    const getETHPrice = async () => {\r\n        setEthPrice(await getEthPrice())\r\n    }\r\n\r\n    const handleChange = (panel) => (event, newExpanded) => {\r\n        setExpanded(newExpanded ? panel : false);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        dispatch(showPayment(false))\r\n    }\r\n\r\n    return (\r\n        <Dialog open={open} onClose={handleClose}>\r\n            {/* <DialogTitle>Use Google's location service?</DialogTitle> */}\r\n            <DialogContent>\r\n                <Stack direction='column' spacing={1}>\r\n                    <Stack direction='row' justifyContent='space-between'>\r\n                        <Typography variant='h5' className='caption'>\r\n                            PAYMENT METHOD\r\n                        </Typography>\r\n                        <Typography variant='h6' color='red'>\r\n                            {`${ethPrice.toFixed(2)} USD / ETH`}\r\n                        </Typography>\r\n                    </Stack>\r\n                    <Typography variant='body1'>\r\n                        {`You should pay ${(quantity * PRICE * ethPrice).toFixed(2)} USD for ${quantity} NFTs`}\r\n                    </Typography>\r\n\r\n                </Stack>\r\n                <Accordion expanded={expanded === 'stripe'} onChange={handleChange('stripe')}>\r\n                    <AccordionSummary aria-controls=\"panel1d-content\" id=\"panel1d-header\">\r\n                        <Box component='img' src='/static/stripe.png' width='60px' height='auto' />\r\n                    </AccordionSummary>\r\n                    <AccordionDetails>\r\n                        <Elements stripe={promise}>\r\n                            <StripeForm onSucceed={onSucceed} />\r\n                        </Elements>\r\n                    </AccordionDetails>\r\n                </Accordion>\r\n                <Accordion expanded={expanded === 'paypal'} onChange={handleChange('paypal')}>\r\n                    <AccordionSummary aria-controls=\"panel2d-content\" id=\"panel2d-header\">\r\n                        <Box component='img' src='/static/paypal.png' width='90px' height='auto' />\r\n                    </AccordionSummary>\r\n                    <AccordionDetails>\r\n                        <PaypalForm onSucceed={onSucceed} />\r\n                    </AccordionDetails>\r\n                </Accordion>\r\n            </DialogContent>\r\n        </Dialog>\r\n    )\r\n}\r\n\r\nexport default Payment;","/* eslint-disable */\r\nimport { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Web3 from 'web3'\r\n// material\r\nimport { useTheme, styled } from '@material-ui/core/styles';\r\n// import { Typography, useMediaQuery, Stack,Button, InputBase } from '@material-ui/core';\r\nimport Typography from '@material-ui/core/Typography'\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery'\r\nimport Stack from '@material-ui/core/Stack'\r\nimport Button from '@material-ui/core/Button'\r\nimport InputBase from '@material-ui/core/InputBase'\r\n// import { LoadingButton } from '@material-ui/lab';\r\nimport LoadingButton from '@material-ui/lab/LoadingButton'\r\n//\r\nimport { setModal, showPayment, buyNFTs, setQuantity } from '../actions/manager';\r\nimport { hasEnoughEth, mint, getTotalMinted } from '../lib/mint';\r\nimport AlertDialog from './AlertDialog';\r\nimport Payment from './payment/Payment'\r\n// ----------------------------------------------------------------------\r\nconst NETWORK = 'rinkeby';\r\nconst RINKEBY_CHAINID = 4;\r\nconst MAINNET_CHAINID = 1;\r\n\r\nconst RootStyle = styled('div')(({ theme }) => ({\r\n  // paddingTop: theme.spacing(15),\r\n  padding: theme.spacing(3),\r\n  [theme.breakpoints.up('md')]: {\r\n    padding: theme.spacing(15)\r\n  }\r\n}));\r\n\r\nconst ButtonStyle = styled(Button)(({ theme }) => (\r\n  {\r\n    borderRadius: 0,\r\n    minWidth: '10px',\r\n    backgroundColor: '#0f2938'\r\n  }\r\n));\r\n\r\nconst ConnectButton = styled(LoadingButton)(({ theme }) => ({\r\n  borderRadius: 0,\r\n  width: '200px'\r\n}));\r\n\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function Test() {\r\n  const theme = useTheme();\r\n  const isDesktop = useMediaQuery(theme.breakpoints.up('md'));\r\n  const dispatch = useDispatch();\r\n  const isAuthenticated = useSelector(state => state.auth.isAuthenticated)\r\n  // const [quantity, setQuantity] = useState(1);\r\n  const quantity = useSelector(state => state.manager.quantity)\r\n  const [account, setAccount] = useState('');\r\n  const [initWeb3, setInitWeb3] = useState(false);\r\n  const [minting, setMinting] = useState(false);\r\n  const [buying, setBuying] = useState(false)\r\n  const [totalMinted, setTotalMinted] = useState(0);\r\n\r\n  useEffect(() => {\r\n    if (window.ethereum && !initWeb3) {\r\n      setInitWeb3(true);\r\n      window.web3 = new Web3(window.ethereum);\r\n      window.ethereum.on('accountsChanged', function (accounts) {\r\n        // if (accounts[0] !== account) {\r\n        console.log(\"change\", accounts[0]);\r\n        conMetamask();\r\n        // }\r\n      });\r\n      window.ethereum.on('networkChanged', function (networkId) {\r\n        if (Number(networkId) !== (NETWORK === 'rinkeby' ? RINKEBY_CHAINID : MAINNET_CHAINID)) {\r\n          dispatch(setModal(true, `Connect to ${NETWORK} network on metamask.`));\r\n          setAccount(\"\");\r\n          return;\r\n        }\r\n        conMetamask();\r\n      });\r\n      setTotal()\r\n      // conMetamask();\r\n    }\r\n    // getRyoshiBalance(account, zksyncWallet);\r\n  }, []);\r\n  /// window.ethereum used to get addrss\r\n  const conMetamask = async (e) => {\r\n    // console.log(e);\r\n    console.log('changed');\r\n    if (window.ethereum) {\r\n      try {\r\n        // const addressArray = await window.ethereum.request({\r\n        //   method: \"eth_requestAccounts\",\r\n        // });\r\n        // window.web3 = new Web3(window.ethereum);\r\n        //   console.log(\"account\",addressArray[0]);\r\n        const chainId = await window.ethereum.request({\r\n          method: \"eth_chainId\"\r\n        });\r\n        if (Number(chainId) !== (NETWORK === 'rinkeby' ? RINKEBY_CHAINID : MAINNET_CHAINID)) {\r\n          dispatch(setModal(true, `Connect to ${NETWORK} network on metamask.`));\r\n          setAccount(\"\");\r\n          return;\r\n        }\r\n        const accounts = await window.ethereum.enable();\r\n        console.log(accounts);\r\n        // console.log(await window.web3.eth.getBalance(accounts[0]));\r\n        setAccount(accounts[0] !== undefined ? accounts[0] : \"\");\r\n        if (accounts[0] && e) {\r\n          setMinting(true);\r\n          if (await hasEnoughEth(accounts[0], quantity)) {\r\n            if (await mint(accounts[0], quantity)) {\r\n              dispatch(setModal(true, `Minting ${quantity} NFTs succeed`));\r\n              setTotal();\r\n            }\r\n          } else {\r\n            dispatch(setModal(true, `Insufficient funds. Check your wallet balance. You need 0.05 ETH + GAS fee at ${accounts[0]}`));\r\n          }\r\n          setMinting(false);\r\n        }\r\n      } catch (err) {\r\n        setMinting(false);\r\n      }\r\n    } else {\r\n      dispatch(setModal(true, \"Install web3 wallet\"));\r\n    }\r\n  }\r\n\r\n  const setTotal = async () => {\r\n    let total = await getTotalMinted();\r\n    setTotalMinted(total);\r\n  }\r\n\r\n  const changeQuantity = (e) => {\r\n    if (e.target.value > 10) {\r\n      return;\r\n    }\r\n    dispatch(setQuantity(e.target.value));\r\n  }\r\n\r\n  const onSucceed = async () => {\r\n    dispatch(showPayment(false))\r\n    setBuying(true)\r\n    try {\r\n      let res = await buyNFTs(quantity)\r\n      if (res) {\r\n        dispatch(setModal(true, `You have bought ${quantity} ABCs. Please check in my collection`))\r\n      } else {\r\n        dispatch(setModal(true, `Buy NFTs failed`))\r\n      }\r\n    } catch (err) {\r\n      console.log(err.message)\r\n    }\r\n    setBuying(false)\r\n  }\r\n\r\n  return (\r\n    <RootStyle>\r\n      <Stack direction='column'\r\n        sx={{\r\n          p: 3,\r\n          border: '1px solid #1CCAFF',\r\n          backgroundImage: 'repeating-linear-gradient(45deg,#0b1414,#0b1414 10px,#061724 10px,#061724 20px)'\r\n        }}\r\n        spacing={5} alignItems='center'\r\n      >\r\n        <Stack direction='column'>\r\n          <Typography className='flux_title' variant=\"h2\" color='primary.main' sx={{ textAlign: 'center' }}>\r\n            Mint ABC NFTs\r\n          </Typography>\r\n          <Stack direction='row' spacing={1} justifyContent='center'>\r\n            <Typography variant=\"h6\" color='common.white'>\r\n              Total minted:\r\n            </Typography>\r\n            <Typography variant='h6' color='primary.main'>{`${totalMinted} / 10000`}</Typography>\r\n          </Stack>\r\n        </Stack>\r\n\r\n        <Stack direction='column'>\r\n          <Typography variant='h6' color='common.white' textAlign='center'>0.05 Eth + Gas fee</Typography>\r\n          <Typography variant='h6' color='common.white' textAlign='center'>Max 10 ABCs per transactions</Typography>\r\n        </Stack>\r\n        <Stack direction={isDesktop ? 'row' : 'column'} justifyContent='center' spacing={1}>\r\n          <Stack direction='row' sx={{ border: '1px solid #0E77B7', p: '5px', backgroundColor: '#0f2938' }}>\r\n            <ButtonStyle variant='outlined' onClick={() => dispatch(setQuantity(quantity - 1 > 0 ? quantity - 1 : 1))}>-</ButtonStyle>\r\n            <InputBase variant='outlined' type='number'\r\n              fullWidth={true}\r\n              inputProps={{\r\n                min: 1, max: 10,\r\n                sx: { textAlign: 'center' },\r\n              }}\r\n              value={quantity}\r\n              onChange={changeQuantity}\r\n            />\r\n            <ButtonStyle variant='outlined' onClick={() => dispatch(setQuantity(quantity + 1 <= 10 ? quantity + 1 : 10))}>+</ButtonStyle>\r\n          </Stack>\r\n          <Stack direction='row' spacing={1}>\r\n\r\n            <ButtonStyle variant='outlined' onClick={() => dispatch(setQuantity(3))}>3</ButtonStyle>\r\n            <ButtonStyle variant='outlined' onClick={() => dispatch(setQuantity(5))}>5</ButtonStyle>\r\n            <ButtonStyle variant='outlined' onClick={() => dispatch(setQuantity(10))}>10</ButtonStyle>\r\n          </Stack>\r\n        </Stack>\r\n        <Stack direction='row' spacing={1}>\r\n          <ConnectButton loading={minting} loadingPosition='start' variant='contained' size='large' onClick={conMetamask}>{`MINT`}</ConnectButton>\r\n          {\r\n            isAuthenticated && <ConnectButton loading={buying} loadingPosition='start' variant='contained' size='large' onClick={e => dispatch(showPayment(true))}>{buying ? `Buying...` : `Buy`}</ConnectButton>\r\n          }\r\n        </Stack>\r\n        <a href='https://rinkeby.etherscan.io/address/0xfFA4683b9aC4aAD95416804f4cac0e23f527F63c' target='_blank' style={{ textDecoration: 'none' }}><Typography variant='body1' color='white'>View Contract</Typography> </a>\r\n      </Stack>\r\n      <AlertDialog />\r\n      <Payment onSucceed={onSucceed} />\r\n    </RootStyle >\r\n  );\r\n}\r\n"],"sourceRoot":""}