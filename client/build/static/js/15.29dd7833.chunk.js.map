{"version":3,"sources":["layouts/LogoOnlyLayout.js","utils/fakeRequest.js","components/authentication/verify-code/VerifyCodeForm.js","pages/authentication/VerifyCode.js"],"names":["HeaderStyle","styled","theme","top","left","lineHeight","width","position","padding","spacing","breakpoints","up","LogoOnlyLayout","to","fakeRequest","time","Promise","res","setTimeout","maxLength","object","target","value","length","slice","VerifyCodeForm","navigate","useNavigate","enqueueSnackbar","useSnackbar","VerifyCodeSchema","Yup","shape","code1","required","code2","code3","code4","code5","code6","formik","useFormik","initialValues","validationSchema","onSubmit","a","variant","PATH_DASHBOARD","root","values","errors","isValid","touched","isSubmitting","handleSubmit","getFieldProps","autoComplete","noValidate","Stack","direction","justifyContent","Object","keys","map","item","OutlinedInput","type","placeholder","onInput","error","Boolean","inputProps","sx","p","textAlign","xs","sm","height","FormHelperText","style","LoadingButton","fullWidth","size","loading","mt","RootStyle","Page","display","minHeight","alignItems","VerifyCode","title","Container","Box","maxWidth","mx","Button","component","RouterLink","PATH_AUTH","login","startIcon","icon","arrowIosBackFill","mb","Typography","paragraph","color","align","Link","underline","onClick"],"mappings":"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","file":"static/js/15.29dd7833.chunk.js","sourcesContent":["import { Link as RouterLink, Outlet } from 'react-router-dom';\r\n// material\r\nimport { styled } from '@material-ui/core/styles';\r\n// components\r\nimport Logo from '../components/Logo';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst HeaderStyle = styled('header')(({ theme }) => ({\r\n  top: 0,\r\n  left: 0,\r\n  lineHeight: 0,\r\n  width: '100%',\r\n  position: 'absolute',\r\n  padding: theme.spacing(3, 3, 0),\r\n  [theme.breakpoints.up('sm')]: {\r\n    padding: theme.spacing(5, 5, 0)\r\n  }\r\n}));\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function LogoOnlyLayout() {\r\n  return (\r\n    <>\r\n      <HeaderStyle>\r\n        <RouterLink to=\"/\">\r\n          <Logo />\r\n        </RouterLink>\r\n      </HeaderStyle>\r\n      <Outlet />\r\n    </>\r\n  );\r\n}\r\n","// ----------------------------------------------------------------------\n\nexport default function fakeRequest(time) {\n  return new Promise((res) => setTimeout(res, time));\n}\n","import * as Yup from 'yup';\nimport { useSnackbar } from 'notistack5';\nimport { useNavigate } from 'react-router-dom';\nimport { Form, FormikProvider, useFormik } from 'formik';\n// material\nimport { OutlinedInput, FormHelperText, Stack } from '@material-ui/core';\nimport { LoadingButton } from '@material-ui/lab';\n// routes\nimport { PATH_DASHBOARD } from '../../../routes/paths';\n// utils\nimport fakeRequest from '../../../utils/fakeRequest';\n\n// ----------------------------------------------------------------------\n\n// eslint-disable-next-line consistent-return\nfunction maxLength(object) {\n  if (object.target.value.length > object.target.maxLength) {\n    return (object.target.value = object.target.value.slice(0, object.target.maxLength));\n  }\n}\n\nexport default function VerifyCodeForm() {\n  const navigate = useNavigate();\n  const { enqueueSnackbar } = useSnackbar();\n\n  const VerifyCodeSchema = Yup.object().shape({\n    code1: Yup.number().required('Code is required'),\n    code2: Yup.number().required('Code is required'),\n    code3: Yup.number().required('Code is required'),\n    code4: Yup.number().required('Code is required'),\n    code5: Yup.number().required('Code is required'),\n    code6: Yup.number().required('Code is required')\n  });\n\n  const formik = useFormik({\n    initialValues: {\n      code1: '',\n      code2: '',\n      code3: '',\n      code4: '',\n      code5: '',\n      code6: ''\n    },\n    validationSchema: VerifyCodeSchema,\n    onSubmit: async () => {\n      await fakeRequest(500);\n      enqueueSnackbar('Verify success', { variant: 'success' });\n      navigate(PATH_DASHBOARD.root);\n    }\n  });\n\n  const { values, errors, isValid, touched, isSubmitting, handleSubmit, getFieldProps } = formik;\n\n  return (\n    <FormikProvider value={formik}>\n      <Form autoComplete=\"off\" noValidate onSubmit={handleSubmit}>\n        <Stack direction=\"row\" spacing={2} justifyContent=\"center\">\n          {Object.keys(values).map((item) => (\n            <OutlinedInput\n              key={item}\n              {...getFieldProps(item)}\n              type=\"number\"\n              placeholder=\"-\"\n              onInput={maxLength}\n              error={Boolean(touched[item] && errors[item])}\n              inputProps={{\n                maxLength: 1,\n                sx: {\n                  p: 0,\n                  textAlign: 'center',\n                  width: { xs: 36, sm: 56 },\n                  height: { xs: 36, sm: 56 }\n                }\n              }}\n            />\n          ))}\n        </Stack>\n\n        <FormHelperText error={!isValid} style={{ textAlign: 'right' }}>\n          {!isValid && 'Code is required'}\n        </FormHelperText>\n\n        <LoadingButton fullWidth size=\"large\" type=\"submit\" variant=\"contained\" loading={isSubmitting} sx={{ mt: 3 }}>\n          Verify\n        </LoadingButton>\n      </Form>\n    </FormikProvider>\n  );\n}\n","import { Icon } from '@iconify/react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport arrowIosBackFill from '@iconify/icons-eva/arrow-ios-back-fill';\n// material\nimport { styled } from '@material-ui/core/styles';\nimport { Box, Button, Link, Container, Typography } from '@material-ui/core';\n// layouts\nimport LogoOnlyLayout from '../../layouts/LogoOnlyLayout';\n// routes\nimport { PATH_AUTH } from '../../routes/paths';\n// components\nimport Page from '../../components/Page';\nimport { VerifyCodeForm } from '../../components/authentication/verify-code';\n\n// ----------------------------------------------------------------------\n\nconst RootStyle = styled(Page)(({ theme }) => ({\n  display: 'flex',\n  minHeight: '100%',\n  alignItems: 'center',\n  padding: theme.spacing(12, 0)\n}));\n\n// ----------------------------------------------------------------------\n\nexport default function VerifyCode() {\n  return (\n    <RootStyle title=\"Verify | Minimal UI\">\n      <LogoOnlyLayout />\n\n      <Container>\n        <Box sx={{ maxWidth: 480, mx: 'auto' }}>\n          <Button\n            size=\"small\"\n            component={RouterLink}\n            to={PATH_AUTH.login}\n            startIcon={<Icon icon={arrowIosBackFill} width={20} height={20} />}\n            sx={{ mb: 3 }}\n          >\n            Back\n          </Button>\n\n          <Typography variant=\"h3\" paragraph>\n            Please check your email!\n          </Typography>\n          <Typography sx={{ color: 'text.secondary' }}>\n            We have emailed a 6-digit confirmation code to acb@domain, please enter the code in below box to verify your\n            email.\n          </Typography>\n\n          <Box sx={{ mt: 5, mb: 3 }}>\n            <VerifyCodeForm />\n          </Box>\n\n          <Typography variant=\"body2\" align=\"center\">\n            Donâ€™t have a code? &nbsp;\n            <Link variant=\"subtitle2\" underline=\"none\" onClick={() => {}}>\n              Resend code\n            </Link>\n          </Typography>\n        </Box>\n      </Container>\n    </RootStyle>\n  );\n}\n"],"sourceRoot":""}